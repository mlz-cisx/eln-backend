version: '3.8'

# file structure
# .
# ├── frontend/
# │   └── joeselnfrontend/
# │       └── Dockerfile 
# ├── backend/
# │   └── Dockerfile 
# ├── rabbit2mlzeln/
# │   └── Dockerfile
# └── docker-compose.yml
#
# docker-compose build
# docker-compose up

services:
  eln-backend:
    image: eln-backend
    build:
      context: ./backend
    ports:
      - "8010:8010"
    environment:
      # database
      DB_USER: "test"
      DB_PASSWORD: "test"
      DB_TABLE: "eln"
      DB_PORT: 5432
      DB_ADDR: "eln-postgres"
      # token
      STATIC_ADMIN_TOKEN: "#super_secret#"
      STATIC_WS_TOKEN: "super_ws_secret"
      # keycloak integration
      KEYCLOAK_INTEGRATION: "True"
      KEYCLOAK_REALM_NAME: "joe"
      KEYCLOAK_SERVER_URL: "http://wojians-macbook.local/auth"
      KEYCLOAK_CLIENT_ID: "client_backend"
      KEYCLOAK_CLIENT_SECRET: "cfAAazDMTwst5JgVVbtLjO5hsXQlTziL"
      # typesense
      TYPESENSE_HOST: "eln-typesense"
      TYPESENSE_PORT: 8108
      TYPESENSE_API_KEY: "#super_secret#"
      # url
      URL_BASE_PATH: "http://wojians-macbook.local/api/"  # with tailing slash
      WS_URL: "ws://wojians-macbook.local/ws/"
      WS_PORT: 8011
      ORIGINS: "*,http://localhost:4500,http://wojians-macbook.local"
    command: ["uvicorn", "joeseln_backend.main:app", "--reload", "--port", "8010", "--host", "0.0.0.0", "--loop", "asyncio"]
    volumes:
      - ./data/pictures/:/data/pictures
      - ./data/files/:/data/files

  eln-backend-websocket:
    image: eln-backend
    build:
      context: ./backend
    ports:
      - "8011:8011"
    environment:
      # database
      DB_USER: "test"
      DB_PASSWORD: "test"
      DB_TABLE: "eln"
      DB_PORT: 5432
      DB_ADDR: "eln-postgres"
      # token
      STATIC_ADMIN_TOKEN: "#super_secret#"
      STATIC_WS_TOKEN: "super_ws_secret"
      # keycloak integration
      KEYCLOAK_INTEGRATION: "True"
      KEYCLOAK_REALM_NAME: "joe"
      KEYCLOAK_SERVER_URL: "http://wojians-macbook.local/auth"
      KEYCLOAK_CLIENT_ID: "client_backend"
      KEYCLOAK_CLIENT_SECRET: "cfAAazDMTwst5JgVVbtLjO5hsXQlTziL"
      # url
      URL_BASE_PATH: "http://wojians-macbook.local/api/"  # with tailing slash
      WS_URL: "ws://wojians-macbook.local/ws/"
      WS_PORT: 8011
      ORIGINS: "*,http://localhost:4500,http://wojians-macbook.local"
      WS_INTERNAL_IP: "0.0.0.0"
    command: ["python", "-m", "joeseln_backend.ws.ws_server"]

  eln-frontend:
    image: eln-frontend
    build:
      context: ./frontend/joeselnfrontend/
    environment:
      SERVER_NAME: "wojians-macbook.local" # optional
      API_URL: "http://wojians-macbook.local/api" # without tailing slash
      WS_URL: "ws://wojians-macbook.local/ws"
      KEYCLOAK_URL: "http://wojians-macbook.local/auth"
      KEYCLOAK_REALM: "joe"
      KEYCLOAK_CLIENT_ID: "client_frontend"
      KEYCLOAK_INTEGRATION: "true"
      KEYCLOAK_BEHIND_NGINX: "true"
    ports:
      - "80:80"
      - "443:443"
    # bind certificates if enable HTTPS
    # volumes:
    #   - "/path/to/cert:/etc/nginx/certs/server.crt"
    #   - "/path/to/key:/etc/nginx/certs/server.key"

  eln-postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: "test"
      POSTGRES_PASSWORD: "test"
      POSTGRES_DB: "eln"
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # eln-rabbit2mlzeln:
  #   image: eln-rabbit2mlzeln
  #   build:
  #     context: ./rabbit2mlzeln/
  #   environment:
  #     RABBIT_URL=wojians-macbook.local
  #     RABBIT_PORT=5673
  #     RABBIT_VIRTUAL_HOST=/
  #     RABBIT_USERNAME=guest
  #     RABBIT_PASSWORD=guest
  #     RABBIT_STATIC_QUEUE=test_queue
  #     WORKBENCH_URL=http://wojians-macbook.local:8010/
  #     AUTH_TOKEN=#super_secret#
  #     CSRF_TOKEN=jhDS4TpoDRmX66r1meuwWAInInghCmxzoSZckriOfYQmKg8LegYNtuGEVAhahTOy
  #     LB_NOT_AVAILABLE=create
  #     INSTRUMENT=default
  #     LB_MAX_SIZE=200

  keycloak:
    # ports:
    #   - 8080:8080
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
    image: quay.io/keycloak/keycloak:26.1.4
    volumes:
        - ./data/keycloak_data:/opt/keycloak/data
    command: start-dev --http-relative-path /keycloak --proxy-headers xforwarded --http-enabled=true

  typesense:
    image: typesense/typesense:27.1
    ports:
      - "8108:8108"
    volumes:
      - ./data/typesense_data:/data
    command: --data-dir /data --api-key="#super_secret#" --enable-cors

